module Riaque
  module Document

    def self.included(base)
      base.extend ClassMethods
    end

    module ClassMethods

      # Returns the autogenerated key based on an instances attributes.
      #
      # @param  [Hash]   attributes
      # @return [String] default key for instance
      #
      def default_key(attributes)
        self.new(attributes).default_key
      end

      # Given a set of attributes, attempts to find a object using the
      # autogenerated key.
      #
      # @param  [Hash]   attributes
      # @return [Object] returned object if available, else nil.
      #
      def find_by_attributes(attributes)
        begin 
          self.find(self.default_key(attributes))
        rescue Riak::HTTPFailedRequest 
          nil
        end
      end

      # Given a set of attributes, attempts to find a object using the
      # autogenerated key or creates it otherwise.
      #
      # @param  [Hash]   attributes
      # @return [Object] object.
      #
      def find_or_create_by_attributes(attributes)
        instance = self.new(attributes)

        begin 
          self.find(instance.default_key)
        rescue Riak::HTTPFailedRequest 
          instance
        end
      end

    end

  end
end
